pipeline {
    docker {
  agent {
      image 'ariefshaik007/maven-docker-agent:java17'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' 
    }
  }
  stages {
    stage('Build and Test') {
      steps {
        // build the project and create a JAR file
        sh 'cd springboot-app && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://10.47.160.78:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd springboot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build and Push Docker Image') {
  
      environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub')
        IMAGE_NAME = "ariefshaik007/ci-cd-proj"
        IMAGE_TAG = "${BUILD_NUMBER}"
      }
      steps {
        sh '''
          cd springboot-app
          docker build -t $IMAGE_NAME:$IMAGE_TAG .
          echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin
          docker push $IMAGE_NAME:$IMAGE_TAG
        '''
      }
    
    }
    stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "java-maven-sonar-argocd-k8s"
            GIT_USER_NAME = "ariefshaik7"
            IMAGE_NAME = "ariefshaik007/ci-cd-shell-lab"
            IMAGE_TAG = "${BUILD_NUMBER}"
        }
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    rm -rf ${GIT_REPO_NAME}
                    git clone https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git
                    cd ${GIT_REPO_NAME}
                    git config user.email "ariefshaik001@gmail.com"
                    git config user.name "arief"

                    yq -i ".spec.template.spec.containers[0].image = \\"${IMAGE_NAME}:${IMAGE_TAG}\\"" springboot-app-manifests/deployment.yml
  
                    git add springboot-app-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
  
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:master
                '''
            }
        }
    }
  }
}
